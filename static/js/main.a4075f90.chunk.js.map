{"version":3,"sources":["assets/logo.svg","config/constants.js","components/chat.js","screens/mainmap.js","App.js","reportWebVitals.js","index.js"],"names":["socket","socketIOClient","path","Chat","useState","messages","setMessage","chatInput","createRef","nickname","useEffect","on","data","console","log","oldArray","disconnect","map","msg","dateraw","Date","date","getHours","getMinutes","text","message","title","name","dateString","ref","defaultValue","type","onClick","e","current","value","msgToSend","emit","MainMap","className","src","logo","alt","href","target","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gJAAe,G,YAAA,IAA0B,kC,wBCI5BA,E,MAASC,GAFC,wDAEuB,CAAEC,KAAM,a,wBCGvC,SAASC,IAKtB,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACIC,EAAYC,sBACZC,EAAWD,sBAEfE,qBAAU,WAMR,OALAV,EAAOW,GAAG,QAAQ,SAAAC,GAChBC,QAAQC,IAAI,OAAQF,GACpBN,GAAW,SAAAS,GAAQ,4BAAQA,GAAR,CAAkBH,UAGhC,kBAAMZ,EAAOgB,gBACnB,IAkBH,OACE,gCACGX,EAASY,KAAI,SAACC,GACb,IAAMC,EAAU,IAAIC,KAAKF,EAAIG,MACvBA,EAAI,UAAMF,EAAQG,WAAd,YAA4BH,EAAQI,cAC9C,OAEE,cAAC,aAAD,CACEC,KAAMN,EAAIO,QACVC,MAAOR,EAAIS,KACXC,WAAYP,OATpB,UAeE,uBAAOQ,IAAKpB,EAAUqB,aAAa,uBACnC,uBAAOD,IAAKtB,IACZ,uBAAOwB,KAAK,SAASC,QAjCT,SAACC,GAEZpB,QAAQC,IAAI,sDAAiDP,EAAU2B,QAAQC,OAG/E,IAAMC,EAAY,CAChBT,KAAMlB,EAASyB,QAAQC,OAAS,qBAChCV,QAASlB,EAAU2B,QAAQC,OAE7BnC,EAAOqC,KAAK,OAAQD,GAGpB7B,EAAU2B,QAAQC,MAAQ,IAqBYA,MAAM,cCvDpC,SAASG,IAEtB,OAEE,cADA,CACA,OAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,oDAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,4BASF,cAAC1C,EAAD,OCbS2C,MANf,WACE,OACE,cAACR,EAAD,KCMWS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a4075f90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import socketIOClient from \"socket.io-client\";\n\nexport const API_URL = 'wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl';\n\nexport const socket = socketIOClient(API_URL, { path: '/flights' });\n","import { socket } from '../config/constants';\nimport React, { useState, useEffect, createRef } from \"react\";\n\nimport 'react-chat-elements/dist/main.css';\nimport { MessageBox } from 'react-chat-elements';\n\n\nexport default function Chat() {\n  // js code\n  // const socket = io(API_URL, { path: '/flights' })\n\n\n  const [messages, setMessage] = useState([]);  // Hook\n  let chatInput = createRef();\n  let nickname = createRef();\n\n  useEffect(() => {\n    socket.on(\"CHAT\", data => {\n      console.log('data', data);\n      setMessage(oldArray => [...oldArray, data]);\n    });\n    // Desconectar websocket\n    return () => socket.disconnect();\n  }, []);\n\n  // Enviar mensaje\n  const sendMsg = (e) => {\n       // Api request here\n       console.log('llamando a la función con un botón. currText:', chatInput.current.value);\n\n       // Enviar mensaje al socket\n       const msgToSend = {\n         name: nickname.current.value || 'Piloto desconocido',\n         message: chatInput.current.value,\n       }\n       socket.emit('CHAT', msgToSend);\n\n       // Limpiar el mensaje del chat\n       chatInput.current.value = \"\";\n   }\n\n  return(\n    <div>\n      {messages.map((msg) => {\n        const dateraw = new Date(msg.date);\n        const date = `${dateraw.getHours()}:${dateraw.getMinutes()}`;\n        return(\n\n          <MessageBox\n            text={msg.message}\n            title={msg.name}\n            dateString={date}\n          />\n        )\n      })}\n\n      Nickame\n      <input ref={nickname} defaultValue=\"Piloto desconocido\"/>\n      <input ref={chatInput} />\n      <input type=\"button\" onClick={sendMsg} value=\"Enviar\"/>\n    </div>\n  )\n}\n","import React from 'react'\nimport logo from '../assets/logo.svg';\nimport Chat from '../components/chat';\n\nexport default function MainMap() {\n  // javascript code\n  return (\n    // html-ish\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload. Desde el nuevo componente\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <Chat />\n    </div>\n  )\n}\n","\nimport './App.css';\nimport MainMap from './screens/mainmap';\n\nfunction App() {\n  return (\n    <MainMap />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}