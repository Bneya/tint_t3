{"version":3,"sources":["config/constants.js","components/chat.js","components/map.js","components/flightsinfo.js","screens/mainmap.js","App.js","reportWebVitals.js","index.js"],"names":["socket","socketIOClient","path","Chat","useState","messages","setMessage","chatInput","createRef","nickname","useEffect","on","data","console","log","oldArray","disconnect","className","map","msg","dateraw","Date","date","getHours","getMinutes","text","message","title","name","dateString","ref","defaultValue","placeholder","type","onClick","e","current","value","msgToSend","emit","Map","props","vuelosPos","setVuelosPos","vuelosTracks","setVuelosTracks","polylines","finfo","f","origin","destination","formPolylines","code","position","oldObj","concat","limeOptions","color","polyTracks","Object","values","formPolyTracks","MapContainer","center","zoom","scrollWheelZoom","style","height","TileLayer","attribution","url","Polyline","pathOptions","positions","Circle","radius","Tooltip","entries","vuelo","FlightsInfo","setfinfo","Container","Row","Col","xs","padding","flex","Card","bg","Body","Title","ListGroup","Item","variant","airline","plane","seats","passengers","pas","age","MainMap","App","rel","href","integrity","crossOrigin","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc882fe8.chunk.js","sourcesContent":["import socketIOClient from \"socket.io-client\";\n\nexport const API_URL = 'wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl';\n\nexport const socket = socketIOClient(API_URL, { path: '/flights' });\n","import { socket } from '../config/constants';\nimport React, { useState, useEffect, createRef } from \"react\";\n\nimport 'react-chat-elements/dist/main.css';\nimport { MessageBox } from 'react-chat-elements';\n\n\nexport default function Chat() {\n  // js code\n  // const socket = io(API_URL, { path: '/flights' })\n\n\n  const [messages, setMessage] = useState([]);  // Hook\n  let chatInput = createRef();\n  let nickname = createRef();\n\n  useEffect(() => {\n    socket.on(\"CHAT\", data => {\n      console.log('data', data);\n      setMessage(oldArray => [...oldArray, data]);\n    });\n    // Desconectar websocket\n    return () => socket.disconnect();\n  }, []);\n\n  // Enviar mensaje\n  const sendMsg = (e) => {\n       // Api request here\n       console.log('llamando a la función con un botón. currText:', chatInput.current.value);\n\n       // Enviar mensaje al socket\n       const msgToSend = {\n         name: nickname.current.value || 'Piloto desconocido',\n         message: chatInput.current.value,\n       }\n       socket.emit('CHAT', msgToSend);\n\n       // Limpiar el mensaje del chat\n       chatInput.current.value = \"\";\n   }\n\n  return(\n    <div className='center-col'>\n      {messages.map((msg) => {\n        const dateraw = new Date(msg.date);\n        const date = `${dateraw.getHours()}:${dateraw.getMinutes()}`;\n        return(\n\n          <MessageBox\n            key={msg.date}\n            text={msg.message}\n            title={msg.name}\n            dateString={date}\n          />\n        )\n      })}\n\n      Nickame\n      <input ref={nickname} defaultValue=\"Piloto desconocido\"/>\n      <input ref={chatInput} placeholder='Escribe tu mensaje...'/>\n      <input type=\"button\" onClick={sendMsg} value=\"Enviar\"/>\n    </div>\n  )\n}\n","import { socket } from '../config/constants';\nimport React, { useState, useEffect } from \"react\";\n\n// Cosas del mapa\nimport { MapContainer, TileLayer, Polyline, Circle, Tooltip } from 'react-leaflet'\n\n// Función utilitaria para armar polylines\nfunction formPolylines(finfo) {\n\n  const polylines = finfo.map(f => [f.origin, f.destination]);\n  return polylines;\n}\n\n// Función utilitaria que arma las polylines de tracks\nfunction formPolyTracks(vuelosTracks) {\n\n  const polyTracks = Object.values(vuelosTracks);\n  return polyTracks;\n}\n\nexport default function Map(props) {\n\n  // Hooks\n  const [vuelosPos, setVuelosPos] = useState({});\n  const [vuelosTracks, setVuelosTracks] = useState({});\n  \n  // Obtener lineas de trayectorias teóricas\n  const { finfo } = props;\n  const polylines = formPolylines(finfo);\n\n  // Hook para actualizar posiciones y líneas según eventos del socket\n  useEffect(()=> {\n    socket.on('POSITION', data => {\n      const { code, position } = data;\n      // console.log('code, position', code, position)\n      setVuelosPos(oldObj => ({ ...oldObj, [code]: position}))\n      \n      setVuelosTracks(oldObj => ({\n        ...oldObj,\n        [code]: ( code in oldObj ? oldObj[code].concat([position]) : [position] ) \n      }))\n    });\n\n\n    // Desconectar websocket\n    return () => socket.disconnect();\n  }, [])\n\n\n  const limeOptions = { color: 'lime' }\n  const purpleOptions = { color: 'purple' }\n\n  // console.log('vuelosTracks', vuelosTracks);\n  const polyTracks = formPolyTracks(vuelosTracks);\n\n  return (\n    <div>\n      <div>Mapa de vuelos \"En vivo\"</div>\n      <MapContainer center={[51.505, -0.09]} zoom={1} scrollWheelZoom={false} style={{ height: '400px' }}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        <Polyline pathOptions={limeOptions} positions={polylines} />\n        <Polyline pathOptions={purpleOptions} positions={polyTracks} />\n\n        {polylines.map((f) => {\n          return(\n            <Circle key={f[0][0] + f[0][1]} radius={1600} center={f[0]} pathOptions={limeOptions}>\n              <Tooltip>Inicio</Tooltip>\n            </Circle>\n          )\n        })}\n\n        {polylines.map((f) => {\n          return(\n            <Circle key={f[1][0] + f[1][1]} radius={1600} center={f[1]} pathOptions={limeOptions}>\n              <Tooltip>Final</Tooltip>\n            </Circle>\n          )\n        })}\n\n        {Object.entries(vuelosPos).map((vuelo) => {\n\n          return(\n            <Circle\n              key={vuelo[0]}\n              radius={800}\n              center={vuelo[1]}\n            >\n              <Tooltip>{vuelo[0]}</Tooltip>\n            </Circle>\n          )\n\n        })}\n\n      </MapContainer>\n\n    </div>\n  )\n}\n","import { socket } from '../config/constants';\nimport React, { useState, useEffect } from \"react\";\n\nimport Map from './map';\n\n// Bootstrap\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup'\n\n\nexport default function FlightsInfo() {\n\n  const [finfo, setfinfo] = useState([]);\n\n  // Hook para actualizar estado, escucha el evento FLIGHTS\n  useEffect(() => {\n    socket.on(\"FLIGHTS\", data => {\n      console.log('data', data);\n      setfinfo(data);\n    });\n    // Desconectar websocket\n    return () => socket.disconnect();\n  }, []);\n\n  const getFinfo = (e) => {\n\n    // Enviamos al socket la solicitud para que me mande Info\n    socket.emit('FLIGHTS');\n  }\n\n  return(\n    <div>\n      <Container>\n        <Row>\n          <Col> <Map finfo={finfo} /> </Col>\n        </Row>\n        <Row>\n          <Col>Información de vuelos</Col>\n          <Col><input type=\"button\" onClick={getFinfo} value=\"Obtener info de vuelos\"/></Col>\n        </Row>\n        <Row>\n        {finfo.map((f) => {\n\n          return (\n            <Col xs={4} style={{ padding: '2px', flex: '0 0 33.33%' }}>\n              <Card\n                key={f.code}\n                bg='info'\n                style={{ flex: '0 0 33.33%' }}\n              >\n                <Card.Body>\n                  <Card.Title>Vuelo {f.code}</Card.Title>\n                </Card.Body>\n                <ListGroup className=\"flush\">\n                  <ListGroup.Item variant='info'>Aerolínea: {f.airline}</ListGroup.Item>\n                  <ListGroup.Item variant='info'>Coordenadas origen: [{f.origin[0]}, {f.origin[1]}]</ListGroup.Item>\n                  <ListGroup.Item variant='info'>Coordenadas destino: [{f.destination[0]}, {f.destination[1]}]</ListGroup.Item>\n                  <ListGroup.Item variant='info'>Modelo avión: {f.plane}</ListGroup.Item>\n                  <ListGroup.Item variant='info'>Cantidad asientos: {f.seats}</ListGroup.Item>\n                  <ListGroup.Item variant='info'>Pasajeros:\n                    <ListGroup className=\"flush\">\n                    {f.passengers.map((pas) => {\n                      return(<ListGroup.Item key={pas.name + pas.age}>Nombre: {pas.name}, edad: {pas.age}</ListGroup.Item>)\n                    })}\n                    </ListGroup>\n                  </ListGroup.Item>\n\n                </ListGroup>\n              </Card>\n              </Col>\n          )\n})}\n        </Row>\n      </Container>\n      \n\n      \n\n    </div>\n  )\n}\n","import React from 'react'\nimport Chat from '../components/chat';\nimport FlightsInfo from '../components/flightsinfo';\n\n// Bootstrap\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default function MainMap() {\n  // javascript code\n  return (\n    // html-ish\n    <div className=\"App\">\n\n      <Container>\n        <Row>\n          <Col xs={9}> <FlightsInfo /> </Col>\n          <Col xs={3} className='container-sp'> <Chat /> </Col>\n        </Row>\n      </Container>\n      \n      \n      \n    </div>\n  )\n}\n","import './App.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';  // bootstrap\n\nimport MainMap from './screens/mainmap';\n\nfunction App() {\n  return (\n    <div>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\n      crossOrigin=\"anonymous\"\n    />\n\n    {/* Cosas de leaflet */}\n    <link \n      rel=\"stylesheet\" \n      href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\n      integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\n      crossOrigin=\"\"\n    />\n    <script \n      src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\n      integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"\n      crossOrigin=\"\"\n    ></script>\n\n\n\n    <MainMap />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}